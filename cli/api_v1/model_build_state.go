package api_v1

// generated by lightweight-swagger-codegen@eaglesakura

type BuildState string
type BuildStateArray []BuildState

const BuildState_Pending BuildState = BuildState("Pending")
const BuildState_Building BuildState = BuildState("Building")
const BuildState_Timeout BuildState = BuildState("Timeout")
const BuildState_Failed BuildState = BuildState("Failed")
const BuildState_Completed BuildState = BuildState("Completed")

func (it BuildState) Ptr() *BuildState {
	return &it
}
func (it BuildState) StringPtr() *string {
	temp := string(it)
	return &temp
}
func (it *BuildState) Value() BuildState {
	return *it
}

func (it *BuildState) StringValue() string {
	return string(*it)
}
func (it BuildStateArray) Ptr() *BuildStateArray {
	return &it
}

// Exist Patterns
var BuildStatePattern []string = []string{

	"Pending",
	"Building",
	"Timeout",
	"Failed",
	"Completed",
}

func (it *BuildState) Valid(pattern []string) bool {
	if it == nil {
		return false
	}
	value := string(*it)
	for _, v := range pattern {
		if v == value {
			return true
		}
	}
	return false
}
